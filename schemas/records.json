{
  "title": "EOEPCA metadata profile",
  "description": "Customized EOEPCA metadata profile for OSC",
  "type": "object",
  "required": [
    "id",
    "type",
    "geometry",
    "properties"
  ],
  "properties": {
    "id": {
      "type": "string",
      "description": "A unique identifier of the catalog record.",
      "options": {
        "hidden": true
      }
    },
    "type": {
      "type": "string",
      "enum": [
        "Feature"
      ]
    },
    "time": {
      "oneOf": [
        {
          "enum": [
            null
          ]
        },
        {
          "type": "object",
          "nullable": true,
          "properties": {
            "date": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
            },
            "timestamp": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$"
            },
            "interval": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": {
                "oneOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                  },
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$"
                  },
                  {
                    "type": "string",
                    "enum": [
                      ".."
                    ]
                  }
                ]
              }
            },
            "resolution": {
              "type": "string",
              "description": "Minimum time period resolvable in the dataset, as an ISO 8601 duration"
            }
          }
        }
      ]
    },
    "geometry": {
      "oneOf": [
        {
          "enum": [
            null
          ]
        },
        {
          "oneOf": [
            {
              "type": "object",
              "required": [
                "type",
                "coordinates"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Point"
                  ]
                },
                "coordinates": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "number"
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "type",
                "coordinates"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "MultiPoint"
                  ]
                },
                "coordinates": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "type",
                "coordinates"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "LineString"
                  ]
                },
                "coordinates": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "type",
                "coordinates"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "MultiLineString"
                  ]
                },
                "coordinates": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "minItems": 2,
                    "items": {
                      "type": "array",
                      "minItems": 2,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "type",
                "coordinates"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "Polygon"
                  ]
                },
                "coordinates": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "minItems": 4,
                    "items": {
                      "type": "array",
                      "minItems": 2,
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "type",
                "coordinates"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "MultiPolygon"
                  ]
                },
                "coordinates": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "minItems": 4,
                      "items": {
                        "type": "array",
                        "minItems": 2,
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "object",
              "required": [
                "type",
                "geometries"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "GeometryCollection"
                  ]
                },
                "geometries": {
                  "type": "array",
                  "items": {
                    "$ref": "#/properties/geometry/oneOf/1"
                  }
                }
              }
            }
          ]
        }
      ]
    },
    "conformsTo": {
      "type": "array",
      "description": "The extensions/conformance classes used in this record.",
      "items": {
        "type": "string"
      }
    },
    "properties": {
      "type": "object",
      "properties": {
        "created": {
          "$ref": "../osc.json#/definitions/created"
        },
        "updated": {
          "type": "string",
          "description": "The most recent date on which the record was changed.",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "The nature or genre of the resource. The value should be a code, convenient for filtering records. Where available, a link to the canonical URI of the record type resource will be added to the 'links' property.",
          "enum": [
            "dataset",
            "service",
            "process",
            "workflow",
            "experiment"
          ]
        },
        "title": {
          "type": "string",
          "description": "A human-readable name given to the resource."
        },
        "description": {
          "type": "string",
          "description": "A free-text account of the resource."
        },
        "keywords": {
          "type": "array",
          "description": "The topic or topics of the resource. Typically represented using free-form keywords, tags, key phrases, or classification codes.",
          "items": {
            "type": "string"
          }
        },
        "themes": {
          "type": "array",
          "description": "A knowledge organization system used to classify the resource.",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": [
              "concepts",
              "scheme"
            ],
            "properties": {
              "concepts": {
                "type": "array",
                "description": "One or more entity/concept identifiers from this knowledge system. it is recommended that a resolvable URI be used for each entity/concept identifier.",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "An identifier for the concept."
                    },
                    "title": {
                      "type": "string",
                      "description": "A human readable title for the concept."
                    },
                    "description": {
                      "type": "string",
                      "description": "A human readable description for the concept."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URI providing further description of the concept."
                    }
                  }
                }
              },
              "scheme": {
                "type": "string",
                "description": "An identifier for the knowledge organization system used to classify the resource.  It is recommended that the identifier be a resolvable URI.  The list of schemes used in a searchable catalog can be determined by inspecting the server's OpenAPI document or, if the server implements CQL2, by exposing a queryable (e.g. named `scheme`) and enumerating the list of schemes in the queryable's schema definition."
              }
            }
          }
        },
        "language": {
          "description": "The language used for textual values in this record representation.",
          "$ref": "#/properties/properties/properties/languages/items"
        },
        "languages": {
          "type": "array",
          "description": "This list of languages in which this record is available.",
          "items": {
            "type": "object",
            "description": "The language used for textual values in this record.",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "The language tag as per RFC-5646."
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "description": "The untranslated name of the language."
              },
              "alternate": {
                "type": "string",
                "description": "The name of the language in another well-understood language, usually English."
              },
              "dir": {
                "type": "string",
                "description": "The direction for text in this language. The default, `ltr` (left-to-right), represents the most common situation. However, care should be taken to set the value of `dir` appropriately if the language direction is not `ltr`. Other values supported are `rtl` (right-to-left), `ttb` (top-to-bottom), and `btt` (bottom-to-top).",
                "enum": [
                  "ltr",
                  "rtl",
                  "ttb",
                  "btt"
                ],
                "default": "ltr"
              }
            }
          }
        },
        "resourceLanguages": {
          "type": "array",
          "description": "The list of languages in which the resource described by this record is available.",
          "items": {
            "$ref": "#/properties/properties/properties/languages/items"
          }
        },
        "externalIds": {
          "type": "array",
          "description": "An identifier for the resource assigned by an external (to the catalog) entity.",
          "items": {
            "type": "object",
            "properties": {
              "scheme": {
                "type": "string",
                "description": "A reference to an authority or identifier for a knowledge organization system from which the external identifier was obtained. It is recommended that the identifier be a resolvable URI."
              },
              "value": {
                "type": "string",
                "description": "The value of the identifier."
              }
            },
            "required": [
              "value"
            ]
          }
        },
        "formats": {
          "type": "array",
          "description": "A list of available distributions of the resource.",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "required": [
                  "name"
                ]
              },
              {
                "required": [
                  "mediaType"
                ]
              }
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mediaType": {
                "type": "string"
              }
            }
          }
        },
        "contacts": {
          "type": "array",
          "description": "A list of contacts qualified by their role(s) in association to the record or the resource described by the record.",
          "items": {
            "type": "object",
            "description": "Identification of, and means of communication with, person responsible\nfor the resource.",
            "anyOf": [
              {
                "required": [
                  "name"
                ]
              },
              {
                "required": [
                  "organization"
                ]
              }
            ],
            "properties": {
              "identifier": {
                "type": "string",
                "description": "A value uniquely identifying a contact."
              },
              "name": {
                "type": "string",
                "description": "The name of the responsible person."
              },
              "position": {
                "type": "string",
                "description": "The name of the role or position of the responsible person taken from the organization's formal organizational hierarchy or chart."
              },
              "organization": {
                "type": "string",
                "description": "Organization/affiliation of the contact."
              },
              "logo": {
                "description": "Graphic identifying a contact. The link relation should be `icon` and the media type should be an image media type.",
                "allOf": [
                  {
                    "$ref": "#/properties/links/items"
                  },
                  {
                    "type": "object",
                    "required": [
                      "rel",
                      "type"
                    ],
                    "properties": {
                      "rel": {
                        "enum": [
                          "icon"
                        ]
                      }
                    }
                  }
                ]
              },
              "phones": {
                "type": "array",
                "description": "Telephone numbers at which contact can be made.",
                "items": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value is the phone number itself.",
                      "pattern": "^\\+[1-9]{1}[0-9]{3,14}$"
                    },
                    "roles": {
                      "description": "The type of phone number (e.g. home, work, fax, etc.).",
                      "$ref": "#/properties/properties/properties/contacts/items/properties/roles"
                    }
                  }
                }
              },
              "emails": {
                "type": "array",
                "description": "Email addresses at which contact can be made.",
                "items": {
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value is the email number itself.",
                      "format": "email"
                    },
                    "roles": {
                      "description": "The type of email (e.g. home, work, etc.).",
                      "$ref": "#/properties/properties/properties/contacts/items/properties/roles"
                    }
                  }
                }
              },
              "addresses": {
                "type": "array",
                "description": "Physical location at which contact can be made.",
                "items": {
                  "type": "object",
                  "properties": {
                    "deliveryPoint": {
                      "type": "array",
                      "description": "Address lines for the location.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "city": {
                      "type": "string",
                      "description": "City for the location."
                    },
                    "administrativeArea": {
                      "type": "string",
                      "description": "State or province of the location."
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "ZIP or other postal code."
                    },
                    "country": {
                      "type": "string",
                      "description": "Country of the physical address.  ISO 3166-1 is recommended."
                    },
                    "roles": {
                      "description": "The type of address (e.g. office, home, etc.).",
                      "$ref": "#/properties/properties/properties/contacts/items/properties/roles"
                    }
                  }
                }
              },
              "links": {
                "type": "array",
                "description": "On-line information about the contact.",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/properties/links/items"
                    },
                    {
                      "type": "object",
                      "required": [
                        "type"
                      ]
                    }
                  ]
                }
              },
              "hoursOfService": {
                "type": "string",
                "description": "Time period when the contact can be contacted."
              },
              "contactInstructions": {
                "type": "string",
                "description": "Supplemental instructions on how or when to contact the\nresponsible party."
              },
              "roles": {
                "description": "The set of named duties, job functions and/or permissions associated with this contact. (e.g. developer, administrator, etc.).",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "license": {
          "type": "string",
          "description": "A legal document under which the resource is made available. If the resource is being made available under a common license then use an SPDX license id (https://spdx.org/licenses/). If the resource is being made available under multiple common licenses then use an SPDX license expression v2.3 string (https://spdx.github.io/spdx-spec/v2.3/SPDX-license-expressions/) If the resource is being made available under one or more licenses that haven't been assigned an SPDX identifier or one or more custom licenses then use a string value of 'other' and include one or more links (rel=\"license\") in the `link` section of the record to the file(s) that contains the text of the license(s). There is also the case of a resource that is private or unpublished and is thus unlicensed; in this case do not register such a resource in the catalog in the first place since there is no point in making such a resource discoverable."
        },
        "rights": {
          "type": "string",
          "description": "A statement that concerns all rights not addressed by the license such as a copyright statement."
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "href"
        ],
        "properties": {
          "href": {
            "type": "string",
            "format": "uri-reference"
          }
        },
        "allOf": [
          {
            "$ref": "#/$defs/baselink"
          }
        ]
      }
    },
    "linkTemplates": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "uriTemplate"
        ],
        "properties": {
          "uriTemplate": {
            "type": "string",
            "description": "Supplies a resolvable URI to a remote resource (or resource fragment)."
          },
          "varBase": {
            "type": "string",
            "description": "The base URI to which the variable name can be appended to retrieve the definition of the variable as a JSON Schema fragment.",
            "format": "uri"
          },
          "variables": {
            "type": "object",
            "description": "This object contains one key per substitution variable in the templated URL.  Each key defines the schema of one substitution variable using a JSON Schema fragment and can thus include things like the data type of the variable, enumerations, minimum values, maximum values, etc."
          }
        },
        "allOf": [
          {
            "$ref": "#/$defs/baselink"
          }
        ]
      }
    }
  },
  "$defs": {
    "baselink": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string",
          "description": "The type or semantics of the relation."
        },
        "type": {
          "type": "string",
          "description": "A hint indicating what the media type of the result of dereferencing the link should be."
        },
        "hreflang": {
          "type": "string",
          "description": "A hint indicating what the language of the result of dereferencing the link should be."
        },
        "title": {
          "type": "string",
          "description": "Used to label the destination of a link such that it can be used as a human-readable identifier."
        },
        "length": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "description": "Date of creation of the resource pointed to by the link.",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "description": "Most recent date on which the resource pointed to by the link was changed.",
          "format": "date-time"
        }
      }
    }
  }
}
